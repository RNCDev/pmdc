# Environment variables for local development (.env file)
# Rename this file to .env and fill in the values.
# DO NOT COMMIT THE ACTUAL .env FILE TO VERSION CONTROL.

# --- Core Settings --- #
# DEBUG=True

# --- Database Settings (used by docker-compose and Alembic/SQLAlchemy) --- #
POSTGRES_SERVER=localhost # Or the service name if running app inside docker ('db')
POSTGRES_USER=pmdc
POSTGRES_PASSWORD=changeme
POSTGRES_DB=pmdc_dev
POSTGRES_PORT=5433 # Use the host port mapped in docker-compose
# Assemble the full URI for the application (adjust if app runs outside docker)
# DATABASE_URI=postgresql+psycopg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_SERVER}:${POSTGRES_PORT}/${POSTGRES_DB}

# --- SaaS Provider Settings --- #
# Replace with actual values from your chosen provider
SAAS_PROVIDER_NAME=lume
SAAS_API_BASE_URL=https://api.example-saas.com/v1
SAAS_API_KEY=YOUR_SAAS_API_KEY_HERE
# SAAS_API_TIMEOUT=30

# --- Authentication Settings (OAuth2 / OIDC) --- #
# Replace with actual values from your Identity Provider (e.g., Auth0)
AUTH_TOKEN_URL=https://your-auth-domain.auth0.com/oauth/token
AUTH_JWKS_URL=https://your-auth-domain.auth0.com/.well-known/jwks.json
AUTH_AUDIENCE=https://api.pmdc.org # Your API Identifier in Auth0
AUTH_ISSUER=https://your-auth-domain.auth0.com/
# AUTH_ALGORITHMS=["RS256"]

# --- Celery Settings --- #
# If running app outside docker, point to localhost mapped port
# CELERY_BROKER_URL=redis://localhost:6379/0 
# CELERY_RESULT_BACKEND=redis://localhost:6379/0
# If running app inside docker, point to service name
# CELERY_BROKER_URL=redis://redis:6379/0
# CELERY_RESULT_BACKEND=redis://redis:6379/0

# --- CORS Settings --- #
# BACKEND_CORS_ORIGINS=["http://localhost:3000"] # Example for React dev server 